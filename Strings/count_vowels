/*2559. Count Vowel Strings in Ranges
Solved
Medium
Topics
Companies
Hint
You are given a 0-indexed array of strings words and a 2D array of integers queries.

Each query queries[i] = [li, ri] asks us to find the number of strings present 
in the range li to ri (both inclusive) of words that start and end with a vowel.

Return an array ans of size queries.length, where ans[i] is the answer to the ith query.

Note that the vowel letters are 'a', 'e', 'i', 'o', and 'u'.
Example 1:

Input: words = ["aba","bcb","ece","aa","e"], queries = [[0,2],[1,4],[1,1]]
Output: [2,3,0]
Explanation: The strings starting and ending with a vowel are "aba", "ece", "aa" and "e".
The answer to the query [0,2] is 2 (strings "aba" and "ece").
to query [1,4] is 3 (strings "ece", "aa", "e").
to query [1,1] is 0.
We return [2,3,0].
*/
#include <iostream>
#include <vector>
#include <string>
#include <set>

using namespace std;
class Solution
{
public:
    vector<int> vowelStrings(vector<string> &words, vector<vector<int>> &queries)
    {
        // Step 1: Create a set of vowels for quick lookup
        set<char> vowels = {'a', 'e', 'i', 'o', 'u'};

        // Step 2: Precompute prefix sums
        int n = words.size();
        vector<int> prefixSum(n + 1, 0);

        for (int i = 0; i < n; ++i)
        {
            // Check if the word starts and ends with vowels
            if (vowels.count(words[i][0]) > 0 && vowels.count(words[i].back()) > 0)
            {
                prefixSum[i + 1] = prefixSum[i] + 1;
            }
            else
            {
                prefixSum[i + 1] = prefixSum[i];
            }
        }

        // Step 3: Answer the queries
        vector<int> result;
        for (const auto &query : queries)
        {
            int li = query[0];
            int ri = query[1];
            // Number of valid strings in range [li, ri]
            result.push_back(prefixSum[ri + 1] - prefixSum[li]);
        }

        return result;
    }
};
